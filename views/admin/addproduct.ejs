<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link href="https://unpkg.com/cropperjs/dist/cropper.min.css" rel="stylesheet" />
        <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
        }
        .sidebar {
            width: 250px;
            height: 100vh;
            background-color: #343a40;
            padding: 20px;
            color: #fff;
            position: fixed;
        }
        .sidebar h2 {
            text-align: center;
            margin-bottom: 20px;
        }
        .sidebar a {
            display: block;
            padding: 10px;
            color: #fff;
            text-decoration: none;
            margin-bottom: 10px;
        }
        .sidebar a:hover {
            background-color: #495057;
        }
        .main-content {
            margin-left: 270px;
            padding: 20px;
            width: calc(100% - 270px);
        }
        .form-container {
            background-color: #fff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            max-width: 800px;
            margin: 0 auto;
        }
        .form-container h3 {
            text-align: center;
            margin-bottom: 20px;
            color: #d9534f;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-control,
        .form-control-file {
            border-radius: 5px;
            padding: 10px;
        }
        .image-upload {
            position: relative;
            width: 100px;
            height: 100px;
            border: 2px dashed #ccc;
            border-radius: 10px;
            overflow: hidden;
            text-align: center;
            cursor: pointer;
            margin-right: 10px;
        }
        .image-upload input[type="file"] {
            display: none;
        }
        .image-upload img.preview {
            display: none;
            max-width: 100%;
            max-height: 100%;
        }
        .image-upload div {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: #ccc;
            font-size: 14px;
        }
        .error-message {
            color: red;
            margin-top: 5px;
            font-size: 0.875rem;
        }
    </style>
</head>
<body>

<div class="sidebar">
    <h2>BOOGY</h2>
    <a href="/admin/dashboard">Dashboard</a>
    <a href="/admin/loadusermanage">Customer</a>
    <a href="/admin/loadOrderlist">Orders</a>
    <a href="/admin/loadCategory">Product</a>
    <a href="/admin/loadCoupon">Coupon</a>
    <a href="/admin/loadOffer">Offers</a>
    <a href="/admin/loadCategory">Categories</a>
    <a href="/admin/logout">Logout</a>
</div>

<div class="main-content">
    <div class="form-container">
        <h3>Add Product</h3>
        <div id="error-summary" class="alert alert-danger" style="display: none;"></div>
        <form id="addProductForm" action="/admin/addProduct" method="POST" enctype="multipart/form-data">
            <div class="form-group">
                <label for="productName">Product Name</label>
                <input type="text" class="form-control" id="productName" name="productName" required>
                <div class="error-message" id="productNameError"></div>
            </div>
            <div class="form-group">
                <label for="category">Category</label>
                <select class="form-control" id="category" name="category" required>
                    <% categories.forEach(category => { %>
                        <option value="<%= category._id %>"><%= category.name %></option>
                    <% }); %>
                </select>
                <div class="error-message" id="categoryError"></div>
            </div>
            <div class="form-group">
                <label for="price">Price</label>
                <input type="number" class="form-control" id="price" name="price" required>
                <div class="error-message" id="priceError"></div>
            </div>
            <div class="form-group">
                <label for="quantity">Quantity</label>
                <input type="number" class="form-control" id="quantity" name="quantity" required>
                <div class="error-message" id="quantityError"></div>
            </div>
            <div class="form-group">
                <label for="description">Description</label>
                <textarea class="form-control" id="description" name="description" required></textarea>
                <div class="error-message" id="descriptionError"></div>
            </div>
            <div class="form-group image-group">
                <label class="image-upload">
                    <input type="file" name="productImage1" accept="image/png, image/jpeg" id="productImage1" required>
                    <img id="preview1" class="preview" alt="Image Preview">
                    <div>Click to upload image 1</div>
                </label>
                <label class="image-upload">
                    <input type="file" name="productImage2" accept="image/png, image/jpeg" id="productImage2" required>
                    <img id="preview2" class="preview" alt="Image Preview">
                    <div>Click to upload image 2</div>
                </label>
                <label class="image-upload">
                    <input type="file" name="productImage3" accept="image/png, image/jpeg" id="productImage3" required>
                    <img id="preview3" class="preview" alt="Image Preview">
                    <div>Click to upload image 3</div>
                </label>
                <label class="image-upload">
                    <input type="file" name="productImage4" accept="image/png, image/jpeg" id="productImage4" required>
                    <img id="preview4" class="preview" alt="Image Preview">
                    <div>Click to upload image 4</div>
                </label>
            </div>
            <img id="image-preview" style="display: none; width: 100%; max-width: 300px; margin-top: 10px;">
            <!-- <button type="button" id="crop-button" style="display: none;">Crop Image</button> -->
            <div class="update-btn">
                <button type="submit" class="btn btn-primary">Add Product</button>
            </div>
        </form>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.3/dist/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
<script src="https://unpkg.com/cropperjs/dist/cropper.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.getElementById('addProductForm');
        const errorSummary = document.getElementById('error-summary');

        form.addEventListener('submit', function(event) {
            let valid = true;
            let errorMessages = [];

            // Clear previous errors
            document.querySelectorAll('.error-message').forEach(elem => elem.textContent = '');
            errorSummary.style.display = 'none';

            // Helper function to add error messages
            function addError(element, message, errorId) {
                valid = false;
                document.getElementById(errorId).textContent = message;
                errorMessages.push(message);
            }

            // Validate product name
            const productName = document.getElementById('productName');
            const namePattern = /^[a-zA-Z]+$/;
            if (!productName.value.trim()) {
                addError(productName, 'Product name is required.', 'productNameError');
            } else if (!namePattern.test(productName.value.trim())) {
                addError(productName, 'Product name must contain only letters (no spaces or other characters).', 'productNameError');
            }

            // Validate category
            const category = document.getElementById('category');
            if (!category.value) {
                addError(category, 'Please select a category.', 'categoryError');
            }

            // Validate price
            const price = document.getElementById('price');
            if (price.value <= 0) {
                addError(price, 'Price must be greater than zero.', 'priceError');
            }

            // Validate quantity
            const quantity = document.getElementById('quantity');
            if (quantity.value <= 0) {
                addError(quantity, 'Quantity must be greater than zero.', 'quantityError');
            }

            // Validate description
            const description = document.getElementById('description');
            if (!description.value.trim()) {
                addError(description, 'Description is required.', 'descriptionError');
            }

            // Validate images
            const imageInputs = document.querySelectorAll('.image-upload input[type="file"]');
            const allowedTypes = ['image/png', 'image/jpeg'];
            let validImageCount = 0;
            imageInputs.forEach(input => {
                if (input.files.length > 0) {
                    const file = input.files[0];
                    if (!allowedTypes.includes(file.type)) {
                        addError(input, 'Only PNG and JPEG images are allowed.', 'imageError');
                    } else {
                        validImageCount++;
                    }
                }
            });

            if (validImageCount === 0) {
                addError(null, 'At least one image is required.', 'imageError');
            }

            // Display error summary if there are errors
            if (!valid) {
                errorSummary.innerHTML = `<strong>Please fix the following errors:</strong><ul>${errorMessages.map(msg => `<li>${msg}</li>`).join('')}</ul>`;
                errorSummary.style.display = 'block';
                event.preventDefault(); // Prevent form submission
            }
        });

        // Preview image function
        document.querySelectorAll('.image-upload input[type="file"]').forEach(input => {
            input.addEventListener('change', function() {
                const file = this.files[0];
                const preview = document.getElementById('preview' + this.id.slice(-1));
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        preview.src = e.target.result;
                        preview.style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                } else {
                    preview.src = '';
                    preview.style.display = 'none';
                }
            });
        });

        // jQuery image preview
        $('input[type="file"]').change(function(e) {
            const input = e.target;
            const previewId = $(input).siblings('img.preview').attr('id');
            const preview = document.getElementById(previewId);

            const reader = new FileReader();
            reader.onload = function(event) {
                preview.src = event.target.result;
                preview.style.display = 'block'; // Show the preview
                $(input).siblings('div').hide(); // Hide the "Click to upload" text
            }
            reader.readAsDataURL(input.files[0]);
        });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        let cropper;

        const imageInput = document.getElementById('productImage1');
        const imagePreview = document.getElementById('image-preview');
        const cropButton = document.getElementById('crop-button');

        imageInput.addEventListener('change', (event) => {
            const file = event.target.files[0];

            if (file) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block';
                    cropButton.style.display = 'block';

                    // Initialize Cropper
                    if (cropper) {
                        cropper.destroy();
                    }
                    cropper = new Cropper(imagePreview, {
                        aspectRatio: 1, // Aspect ratio (1:1 for square cropping)
                        viewMode: 1, // Cropping box is constrained within the canvas
                        autoCropArea: 1, // Automatically crop area to 100%
                    });
                };
                reader.readAsDataURL(file);
            }
        });

        cropButton.addEventListener('click', () => {
            if (cropper) {
                const canvas = cropper.getCroppedCanvas();
                canvas.toBlob((blob) => {
                    const formData = new FormData();
                    formData.append('productImage1', blob, 'cropped-image.png');

                    // Optional: Show the cropped image in the preview area
                    imagePreview.src = URL.createObjectURL(blob);

                    // Append other form data and send the form data
                    const form = document.getElementById('addProductForm');
                    formData.append('name', form.querySelector('#name').value.trim());
                    formData.append('description', form.querySelector('#description').value.trim());

                    fetch('/admin/addProduct', {
                        method: 'POST',
                        body: formData
                    }).then(response => response.json())
                      .then(data => {
                          console.log('Category added successfully:', data);
                          window.location.href = '/admin/loadCategory';
                      }).catch(error => {
                          console.error('Error:', error);
                          alert('Error adding category: ' + error.message);
                      });
                });
            }
        });
    });
</script>

<%- include('../layouts/footer') %>
</body>
</html>
